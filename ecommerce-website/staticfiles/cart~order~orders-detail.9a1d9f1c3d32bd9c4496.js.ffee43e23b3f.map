{"version":3,"file":"cart~order~orders-detail.9a1d9f1c3d32bd9c4496.js","sources":["webpack:///./src/components/layouts/DialogTitle.js","webpack:///./src/components/loading/LoadingButton.js","webpack:///./src/pages/checkoutPages/cart/components/CartItem.js","webpack:///./src/pages/checkoutPages/cart/components/CartItems.js","webpack:///./src/pages/checkoutPages/cart/components/UpdateCartItem.js","webpack:///./src/redux/actions/cartActions.js"],"sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  }\n}));\n\nconst DialogTitle = props => {\n  const { children, onClose } = props;\n  const classes = useStyles();\n\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      <IconButton\n        aria-label=\"close\"\n        className={classes.closeButton}\n        onClick={onClose}\n      >\n        <CloseIcon />\n      </IconButton>\n    </MuiDialogTitle>\n  );\n};\n\nexport default DialogTitle;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(() => ({\n  button: {\n    position: \"relative\"\n  },\n  progress: {\n    position: \"absolute\"\n  }\n}));\n\nconst LoadingButton = ({ children, ...rest }) => {\n  const loading = useSelector(state => state.ui.loadingButton);\n  const classes = useStyles();\n \n\n  return (\n    <Button\n      className={classes.button}\n      {...rest}\n      disabled={rest.disabled || loading}\n    >\n      {children}\n      {loading && (\n        <CircularProgress\n          size={30}\n          color={rest.color}\n          className={classes.progress}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default LoadingButton;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport UpdateCartItem from \"./UpdateCartItem\";\n\nconst useStyles = makeStyles(theme => ({\n  img: {\n    width: \"125px\",\n    height: \"125px\",\n    objectFit: \"contain\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"104px\",\n      height: \"104px\"\n    }\n  },\n  m2: {\n    margin: theme.spacing(2)\n  },\n  mt1: {\n    marginTop: theme.spacing(1)\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  price: {\n    float: \"right\"\n  },\n  quantity: {\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down(\"xs\")]: {\n      margin: theme.spacing(0, 3, 2)\n    }\n  }\n}));\n\nconst getPrice = product => (\n  <React.Fragment>\n    {product.discount_price ? (\n      <Typography display=\"inline\" variant=\"body1\">\n        ₹ <del style={{ color: \"grey\" }}>{product.price}</del>{\" \"}\n        {product.discount_price}\n      </Typography>\n    ) : (\n      <Typography display=\"inline\" variant=\"body1\">\n        ₹ {product.price}\n      </Typography>\n    )}\n  </React.Fragment>\n);\n\nconst CartItem = ({ editable, item, item: { product } }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const QuantityAndPrice = () => (\n    <div className={classes.quantity}>\n      {editable ? (\n        <UpdateCartItem\n          id={item.id}\n          available_count={item.size.available_count}\n          quantity={item.quantity}\n        />\n      ) : (\n        <Typography display=\"inline\">Quantity: {item.quantity}</Typography>\n      )}\n      <Typography className={classes.price} variant=\"h6\" display=\"inline\">\n        ₹ {item.total_price}\n      </Typography>\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Grid container>\n        <Grid className={classes.m2} alignContent=\"center\" item md={2}>\n          <Link to={`/products/${product.slug}`}>\n            <img\n              alt={product.slug}\n              className={classes.img}\n              src={product.photo_main}\n            />\n          </Link>\n        </Grid>\n        <Grid className={classes.m2} item md xs>\n          <Typography\n            className={classes.link}\n            color=\"inherit\"\n            component={Link}\n            to={`/products/${product.slug}`}\n          >\n            {product.title.substring(0, product.title.lastIndexOf(' '))}\n          </Typography>\n          <Typography className={classes.mt1} variant=\"subtitle1\">\n            Size: {item.size.size}\n          </Typography>\n          <Typography className={classes.mt1} variant=\"subtitle1\">\n            Price: {getPrice(product)}\n          </Typography>\n          {!matches && <QuantityAndPrice />}\n        </Grid>\n      </Grid>\n      {matches && <QuantityAndPrice />}\n      <Divider />\n    </React.Fragment>\n  );\n};\n\nexport default CartItem;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport CartItem from \"./CartItem\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst CartItems = ({ items, editable }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      {items.map(item => (\n        <CartItem key={item.id} item={item} editable={editable} />\n      ))}\n    </Paper>\n  );\n};\n\nCartItems.defaultProps = {\n  editable: false\n};\n\nexport default CartItems;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { updateQuantity } from \"@actions/cartActions\";\nimport { removeFromCart } from \"@actions/cartActions\";\nimport DialogTitle from \"@components/layouts/DialogTitle\";\nimport LoadingButton from \"@components/loading/LoadingButton\";\n\nconst UpdateCartItem = ({ id, quantity, available_count }) => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    dispatch(removeFromCart(id, handleClose));\n  };\n\n  const handleAdd = () => {\n    dispatch(updateQuantity(id, quantity + 1));\n  };\n\n  const handleRemove = () => {\n    dispatch(updateQuantity(id, quantity - 1));\n  };\n\n  return (\n    <React.Fragment>\n      <ButtonGroup\n        variant=\"outlined\"\n        color=\"primary\"\n        aria-label=\"split button\"\n        size=\"small\"\n      >\n        {quantity !== 1 ? (\n          <Button onClick={handleRemove}>\n            <RemoveIcon fontSize=\"small\" />\n          </Button>\n        ) : (\n          <Button>\n            <DeleteIcon onClick={handleOpen} fontSize=\"small\" />\n          </Button>\n        )}\n        <Button>{quantity}</Button>\n        <Button onClick={handleAdd} disabled={available_count === quantity}>\n          <AddIcon fontSize=\"small\" />\n        </Button>\n      </ButtonGroup>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <DialogTitle onClose={handleClose}>Remove item</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want remove this item from your cart?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            No, Cancel\n          </Button>\n          <LoadingButton\n            onClick={handleSubmit}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Yes, Remove\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateCartItem;\n","import axios from \"axios\";\n\nimport { addNotif } from \"./notifActions\";\nimport {\n  FETCH_CART,\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  START_LOADING_UI,\n  STOP_LOADING_UI,\n  START_LOADING_BUTTON,\n  STOP_LOADING_BUTTON\n} from \"../types\";\n\nexport const fetchCart = () => dispatch => {\n  dispatch({ type: START_LOADING_UI });\n  axios.get(\"/api/cart/\").then(response => {\n    dispatch({ type: FETCH_CART, payload: response.data });\n    dispatch({ type: STOP_LOADING_UI });\n  });\n};\n\nexport const addToCart = (productId, sizeId, history) => dispatch => {\n  dispatch({ type: START_LOADING_BUTTON });\n  axios\n    .post(\"/api/cart/\", { product: productId, size: sizeId })\n    .then(response => {\n      dispatch({ type: ADD_TO_CART, payload: response.data });\n      dispatch(fetchCart());\n      dispatch({ type: STOP_LOADING_BUTTON });\n      history.push(\"/cart\");\n      dispatch(\n        addNotif({\n          message: \"Item has been added to your cart\",\n          options: { variant: \"info\" }\n        })\n      );\n    });\n};\n\nexport const removeFromCart = (id, handleClose) => dispatch => {\n  dispatch({ type: START_LOADING_BUTTON });\n  axios.delete(`/api/cart/${id}/`).then(response => {\n    dispatch({ type: REMOVE_FROM_CART, payload: id });\n    dispatch(fetchCart());\n    dispatch({ type: STOP_LOADING_BUTTON });\n    handleClose();\n    dispatch(\n      addNotif({\n        message: \"Item has been removed\",\n        options: { variant: \"error\" }\n      })\n    );\n  });\n};\n\nexport const updateQuantity = (id, quantity) => dispatch => {\n  dispatch({ type: START_LOADING_UI });\n  axios.put(`/api/cart/${id}/`, { quantity }).then(response => {\n    dispatch(fetchCart());\n  });\n};\n"],"mappings":"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","sourceRoot":""}