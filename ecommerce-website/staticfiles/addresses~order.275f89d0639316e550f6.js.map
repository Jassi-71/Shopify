{"version":3,"file":"addresses~order.275f89d0639316e550f6.js","sources":["webpack:///./src/components/icons/AddLocation.js","webpack:///./src/pages/authPages/regexes.js","webpack:///./src/pages/profilePages/addresses/components/AddressItem.js","webpack:///./src/pages/profilePages/addresses/components/CreateAddress/CreateAddress.js","webpack:///./src/pages/profilePages/addresses/components/CreateAddress/CreateAddressButton.js","webpack:///./src/pages/profilePages/addresses/components/CreateAddress/CreateAddressForm.js","webpack:///./src/pages/profilePages/addresses/components/CreateAddress/index.js","webpack:///./src/pages/profilePages/addresses/components/DeleteAddress.js","webpack:///./src/pages/profilePages/addresses/components/EditAddress/EditAddress.js","webpack:///./src/pages/profilePages/addresses/components/EditAddress/EditAddressForm.js","webpack:///./src/pages/profilePages/addresses/components/EditAddress/index.js","webpack:///./src/redux/actions/profileActions/AddressActions.js"],"sourcesContent":["import React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\n\nexport default props => (\n  <SvgIcon {...props}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n      <path d=\"M192 0C86.112 0 0 86.112 0 192c0 133.088 173.312 307.936 180.672 315.328a16.07 16.07 0 0 0 22.656 0s14.08-14.048 34.016-36.96c5.824-6.656 5.12-16.768-1.536-22.592-6.624-5.76-16.704-5.088-22.592 1.536-8.384 9.6-15.68 17.6-21.216 23.52C153.792 432 32 293.664 32 192c0-88.224 71.776-160 160-160s160 71.776 160 160c0 4.576-.256 9.44-1.056 14.304-1.472 8.704 4.384 16.96 13.12 18.432 8.704 1.376 16.96-4.416 18.432-13.12C383.616 204.96 384 198.304 384 192 384 86.112 297.888 0 192 0z\" />\n      <path d=\"M192 96c-52.928 0-96 43.072-96 96s43.072 96 96 96 96-43.072 96-96-43.072-96-96-96zm0 160c-35.296 0-64-28.704-64-64s28.704-64 64-64 64 28.704 64 64-28.704 64-64 64zM384 256c-70.592 0-128 57.408-128 128s57.408 128 128 128 128-57.408 128-128-57.408-128-128-128zm0 224c-52.928 0-96-43.072-96-96s43.072-96 96-96 96 43.072 96 96-43.072 96-96 96z\" />\n      <path d=\"M432 368h-32v-32c0-8.832-7.168-16-16-16s-16 7.168-16 16v32h-32c-8.832 0-16 7.168-16 16s7.168 16 16 16h32v32c0 8.832 7.168 16 16 16s16-7.168 16-16v-32h32c8.832 0 16-7.168 16-16s-7.168-16-16-16z\" />\n    </svg>\n  </SvgIcon>\n);\n","export const phone_number_reg = /^(9|8|7)\\d{9}$/;\nexport const national_code_reg=/^((?!(0))[0-9]{6,6})$/;\nexport const email_reg=/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\nexport const password_reg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/;\nexport const otp_reg = /^\\d{6}$/;","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport PhoneIcon from \"@material-ui/icons/PhoneIphoneOutlined\";\n\nimport DeleteAddress from \"./DeleteAddress\";\nimport EditAddress from \"./EditAddress\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"280px\"\n  },\n  wrapperAddress: {\n    padding: theme.spacing(2),\n    minHeight: \"120px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      minHeight: 0\n    }\n  },\n  wrapperInfo: {\n    borderTop: \"1px solid #f4f4f4\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  list: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  mt3: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst AddressItem = ({ address }) => {\n  const [edit, setEdit] = useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const ListItemActions = () => (\n    <ListItemSecondaryAction>\n      <Button\n        onClick={() => setEdit(true)}\n        size=\"small\"\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Edit\n      </Button>\n      <EditAddress open={edit} setOpen={setEdit} address={address} />\n      <DeleteAddress classes={classes} id={address.id} />\n    </ListItemSecondaryAction>\n  );\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.wrapperAddress}>\n        <Typography variant=\"h5\">{address.receiver_full_name}</Typography>\n        <Typography variant=\"subtitle1\">\n          {address.state} state, {address.city} city, {address.postal_address}\n        </Typography>\n      </div>\n      <div className={classes.wrapperInfo}>\n        <List disablePadding={true} className={classes.list}>\n          <ListItem>\n            <ListItemIcon>\n              <EmailIcon />\n            </ListItemIcon>\n            <ListItemText primary={`postal code: ${address.postal_code}`} />\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <PhoneIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary={`phone number: ${address.receiver_phone_number}`}\n            />\n            {!matches && <ListItemActions />}\n          </ListItem>\n          {matches && (\n            <ListItem className={classes.mt3}>\n              <ListItemActions />\n            </ListItem>\n          )}\n        </List>\n      </div>\n    </Paper>\n  );\n};\n\nexport default AddressItem;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport * as Yup from \"yup\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport CreateAddressForm from \"./CreateAddressForm\";\nimport DialogTitle from \"@components/layouts/DialogTitle\";\nimport { phone_number_reg } from \"@pages/authPages/regexes\";\nimport { createAddress } from \"@actions/profileActions/AddressActions\";\n\nconst validationSchema = Yup.object({\n  receiver_full_name: Yup.string().required(),\n  receiver_phone_number: Yup.string()\n    .matches(phone_number_reg, \"Invalid phone number\")\n    .required(),\n  state: Yup.string().required(),\n  city: Yup.string().required(),\n  postal_address: Yup.string().required(),\n  postal_code: Yup.string().required()\n});\n\nconst CreateAddress = ({ fullScreen, open, handleClose, onSubmit }) => {\n  const values = {\n    receiver_full_name: \"\",\n    receiver_phone_number: \"\",\n    state: \"\",\n    city: \"\",\n    postal_address: \"\",\n    postal_code: \"\"\n  };\n  const theme = useTheme();\n  const responsiveFullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const dispatch = useDispatch();\n\n  const handleSubmit = (address, { setErrors }) => {\n    dispatch(createAddress(address, setErrors, onSubmit || handleClose));\n  };\n\n  return (\n    <React.Fragment>\n      <Dialog\n        fullScreen={fullScreen || responsiveFullScreen}\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"md\"\n      >\n        <DialogTitle onClose={handleClose}>Add Address</DialogTitle>\n        <Formik\n          initialValues={values}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n          validateOnChange={false}\n        >\n          {props => <CreateAddressForm handleClose={handleClose} {...props} />}\n        </Formik>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default CreateAddress;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nimport AddLocationIcon from \"@components/icons/AddLocation\";\n\nconst CreateAddressButton = ({ noIcon, setOpen }) => {\n  return (\n    <Button\n      style={{\n        width: \"100%\",\n        border: \"4px dashed #b8b8b8\",\n        height: \"100%\",\n        alignItems: \"center\",\n        fontSize: \"1.5rem\",\n        color: \"rgba(0, 0, 0, 0.54)\",\n        fontWeight: \"bold\",\n        display: \"block\"\n      }}\n      onClick={() => setOpen(true)}\n    >\n      {noIcon === false && (\n        <AddLocationIcon\n          style={{ fontSize: \"75px\", display: \"block\", margin: \"auto\" }}\n          color=\"action\"\n        />\n      )}\n      Add new address\n    </Button>\n  );\n};\n\nCreateAddressButton.defaultProps = {\n  noIcon: false\n};\n\nexport default CreateAddressButton;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\n\nimport LoadingButton from \"@components/loading/LoadingButton\";\n\nconst CreateAddressForm = props => {\n  const {\n    values: {\n      receiver_full_name,\n      receiver_phone_number,\n      state,\n      city,\n      postal_address,\n      postal_code\n    },\n    errors,\n    handleSubmit,\n    handleChange,\n    handleClose\n  } = props;\n\n  return (\n    <React.Fragment>\n      <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item md={6} xs={12}>\n            <TextField\n              label=\"receiver full name\"\n              placeholder=\"Enter receiver full name\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"receiver_full_name\"\n              autoComplete=\"receiver_full_name\"\n              helperText={errors.receiver_full_name}\n              error={Boolean(errors.receiver_full_name)}\n              value={receiver_full_name}\n              onChange={handleChange}\n              required\n              fullWidth\n              autoFocus\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              label=\"receiver phone number\"\n              placeholder=\"Enter receiver phone number\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"receiver_phone_number\"\n              autoComplete=\"receiver_phone_number\"\n              helperText={errors.receiver_phone_number}\n              error={Boolean(errors.receiver_phone_number)}\n              value={receiver_phone_number}\n              onChange={handleChange}\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              label=\"State\"\n              placeholder=\"Enter state\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"state\"\n              autoComplete=\"state\"\n              helperText={errors.state}\n              error={Boolean(errors.state)}\n              value={state}\n              onChange={handleChange}\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              label=\"City\"\n              placeholder=\"Enter city\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"city\"\n              autoComplete=\"city\"\n              helperText={errors.city}\n              error={Boolean(errors.city)}\n              value={city}\n              onChange={handleChange}\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item md={12} xs={12}>\n            <TextField\n              label=\"Postal address\"\n              placeholder=\"Enter postal address\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"postal_address\"\n              autoComplete=\"postal_address\"\n              rows=\"3\"\n              helperText={errors.postal_address}\n              error={Boolean(errors.postal_address)}\n              value={postal_address}\n              onChange={handleChange}\n              required\n              fullWidth\n              multiline\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              label=\"Postal code\"\n              placeholder=\"Enter postal code with out dash\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"postal_code\"\n              autoComplete=\"postal_code\"\n              helperText={errors.postal_code}\n              error={Boolean(errors.postal_code)}\n              value={postal_code}\n              onChange={handleChange}\n              required\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} size=\"large\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <LoadingButton\n          onClick={handleSubmit}\n          size=\"large\"\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          Add\n        </LoadingButton>\n      </DialogActions>\n    </React.Fragment>\n  );\n};\n\nexport default CreateAddressForm;\n","export { default } from \"./CreateAddress\";\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport DialogTitle from \"@components/layouts/DialogTitle\";\nimport LoadingButton from \"@components/loading/LoadingButton\";\nimport { deleteAddress } from \"@actions/profileActions/AddressActions\";\n\nconst DeleteAddress = ({ classes, id, onClose }) => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    onClose();\n  };\n\n  const handleSubmit = () => {\n    dispatch(deleteAddress(id, handleClose));\n  };\n\n  return (\n    <React.Fragment>\n      <Button\n        onClick={handleOpen}\n        size=\"small\"\n        className={classes.button}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Delete\n      </Button>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <DialogTitle onClose={handleClose}>Delete address</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete this address?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            No, Cancel\n          </Button>\n          <LoadingButton\n            onClick={handleSubmit}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Yes, Delete\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default DeleteAddress;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport * as Yup from \"yup\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport EditAddressForm from \"./EditAddressForm\";\nimport DialogTitle from \"@components/layouts/DialogTitle\";\nimport { phone_number_reg } from \"@pages/authPages/regexes\";\nimport { updateAddress } from \"@actions/profileActions/AddressActions\";\n\nconst validationSchema = Yup.object({\n  receiver_full_name: Yup.string().required(),\n  receiver_phone_number: Yup.string()\n    .matches(phone_number_reg, \"Invalid phone number\")\n    .required(),\n  state: Yup.string().required(),\n  city: Yup.string().required(),\n  postal_address: Yup.string().required(),\n  postal_code: Yup.string().required()\n});\n\nconst EditAddress = ({ open, setOpen, address }) => {\n  const {\n    id,\n    receiver_full_name,\n    receiver_phone_number,\n    state,\n    city,\n    postal_address,\n    postal_code\n  } = address;\n  const values = {\n    receiver_full_name,\n    receiver_phone_number,\n    state,\n    city,\n    postal_address,\n    postal_code\n  };\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = (address, { setErrors }) => {\n    dispatch(updateAddress(address, id, setErrors, handleClose));\n  };\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      onClose={handleClose}\n      maxWidth=\"md\"\n    >\n      <DialogTitle onClose={handleClose}>Add Address</DialogTitle>\n      <Formik\n        initialValues={values}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n        validateOnChange={false}\n      >\n        {props => <EditAddressForm handleClose={handleClose} {...props} />}\n      </Formik>\n    </Dialog>\n  );\n};\n\nexport default EditAddress;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\n\nimport LoadingButton from \"@components/loading/LoadingButton\";\n\nconst EditAddressForm = props => {\n  const {\n    values: {\n      receiver_full_name,\n      receiver_phone_number,\n      state,\n      city,\n      postal_address,\n      postal_code\n    },\n    errors,\n    handleSubmit,\n    handleChange,\n    handleClose,\n    dirty,\n    isValid\n  } = props;\n\n  return (\n    <React.Fragment>\n      <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item md={6} xs={12}>\n            <TextField\n              label=\"receiver full name\"\n              placeholder=\"Enter receiver full name\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"receiver_full_name\"\n              autoComplete=\"receiver_full_name\"\n              helperText={errors.receiver_full_name}\n              error={Boolean(errors.receiver_full_name)}\n              value={receiver_full_name}\n              onChange={handleChange}\n              required\n              fullWidth\n              autoFocus\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              label=\"receiver phone number\"\n              placeholder=\"Enter receiver phone number\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"receiver_phone_number\"\n              autoComplete=\"receiver_phone_number\"\n              helperText={errors.receiver_phone_number}\n              error={Boolean(errors.receiver_phone_number)}\n              value={receiver_phone_number}\n              onChange={handleChange}\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              label=\"State\"\n              placeholder=\"Enter state\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"state\"\n              autoComplete=\"state\"\n              helperText={errors.state}\n              error={Boolean(errors.state)}\n              value={state}\n              onChange={handleChange}\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              label=\"City\"\n              placeholder=\"Enter city\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"city\"\n              autoComplete=\"city\"\n              helperText={errors.city}\n              error={Boolean(errors.city)}\n              value={city}\n              onChange={handleChange}\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item md={12} xs={12}>\n            <TextField\n              label=\"Postal address\"\n              placeholder=\"Enter postal address\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"postal_address\"\n              autoComplete=\"postal_address\"\n              rows=\"3\"\n              helperText={errors.postal_address}\n              error={Boolean(errors.postal_address)}\n              value={postal_address}\n              onChange={handleChange}\n              required\n              fullWidth\n              multiline\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              label=\"Postal code\"\n              placeholder=\"Enter postal code with out dash\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"postal_code\"\n              autoComplete=\"postal_code\"\n              helperText={errors.postal_code}\n              error={Boolean(errors.postal_code)}\n              value={postal_code}\n              onChange={handleChange}\n              required\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} size=\"large\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <LoadingButton\n          onClick={handleSubmit}\n          size=\"large\"\n          variant=\"outlined\"\n          color=\"primary\"\n          disabled={!dirty || !isValid}\n        >\n          Edit\n        </LoadingButton>\n      </DialogActions>\n    </React.Fragment>\n  );\n};\n\nexport default EditAddressForm;\n","export { default } from \"./EditAddress\";\n","import axios from \"axios\";\n\nimport {\n  FETCH_ADDRESSES,\n  CREATE_ADDRESS,\n  DELETE_ADDRESS,\n  UPDATE_ADDRESS,\n  START_LOADING_UI,\n  STOP_LOADING_UI,\n  START_LOADING_BUTTON,\n  STOP_LOADING_BUTTON\n} from \"../../types\";\nimport { addNotif } from \"../notifActions\";\n\nexport const fetchAddresses = () => dispatch => {\n  dispatch({ type: START_LOADING_UI });\n  axios.get(\"/api/user/addresses/\").then(response => {\n    dispatch({ type: FETCH_ADDRESSES, payload: response.data });\n    dispatch({ type: STOP_LOADING_UI });\n  });\n};\n\nexport const createAddress = (address, setErrors, handleClose) => dispatch => {\n  dispatch({ type: START_LOADING_BUTTON });\n  axios\n    .post(\"/api/user/addresses/\", address)\n    .then(response => {\n      dispatch({ type: CREATE_ADDRESS, payload: response.data });\n      handleClose();\n      dispatch(addNotif({ message: \"Address has been created\" }));\n      dispatch({ type: STOP_LOADING_BUTTON });\n    })\n    .catch(error => {\n      setErrors(error.response.data);\n      dispatch({ type: STOP_LOADING_BUTTON });\n    });\n};\n\nexport const deleteAddress = (id, handleClose) => dispatch => {\n  dispatch({ type: START_LOADING_BUTTON });\n  axios.delete(`/api/user/addresses/${id}/`).then(() => {\n    dispatch({ type: DELETE_ADDRESS, payload: id });\n    dispatch({ type: STOP_LOADING_BUTTON });\n    handleClose();\n    dispatch(\n      addNotif({\n        message: \"Address has been deleted\",\n        options: { variant: \"error\" }\n      })\n    );\n  });\n};\n\nexport const updateAddress = (\n  address,\n  id,\n  setErrors,\n  handleClose\n) => dispatch => {\n  dispatch({ type: START_LOADING_BUTTON });\n  axios\n    .put(`/api/user/addresses/${id}/`, address)\n    .then(response => {\n      dispatch({ type: UPDATE_ADDRESS, id, payload: response.data });\n      dispatch({ type: STOP_LOADING_BUTTON });\n      handleClose();\n      dispatch(\n        addNotif({\n          message: \"Address was updated\",\n          options: { variant: \"info\" }\n        })\n      );\n    })\n    .catch(error => {\n      setErrors(error.response.data);\n      dispatch({ type: STOP_LOADING_BUTTON });\n    });\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AALA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AArBA;AAAA;AACA;AAyBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAXA;AACA;AAcA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAOA;AADA;AAMA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AARA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAXA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAQA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAkBA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;;;;;;;;;;;;ACnJA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AARA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAkBA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAYA;AACA;AACA;;;;;;;;;;;;ACtJA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAUA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAdA;AAgBA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAbA;AAeA;AAAA;AAMA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAxBA;;;;A","sourceRoot":""}