{"version":3,"file":"18.2b6699a0c2fc37e0f87a.js","sources":["webpack:///./src/pages/profilePages/Sidebar/ListItemLink.js","webpack:///./src/pages/sellerPages/Seller_Sidebar.js","webpack:///./src/pages/sellerPages/components/Seller_Orders.js","webpack:///./src/redux/actions/sellerActions/ProductActions.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nconst ListItemLink = props => {\n  return <ListItem button component={Link} {...props} />;\n};\n\nListItemLink.defaultProps = {\n  to: \"\"\n};\n\nexport default ListItemLink;\n","import React from 'react'\nimport ListItemLink from '@pages/profilePages/Sidebar/ListItemLink'\nimport { ExpansionPanel, Grid, makeStyles } from '@material-ui/core'\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ShopingCartIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport ChangePasswordIcon from \"@material-ui/icons/LockOutlined\";\nimport LogoutIcon from \"@material-ui/icons/ExitToApp\";\nimport List from '@material-ui/core/List';\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\nimport { Dashboard } from '@material-ui/icons';\nimport { useDispatch } from \"react-redux\";\nimport { fetchSellerProducts } from \"@actions/sellerActions/ProductActions\";\n\nconst useStyle=makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(1)\n    },\n    detail: {\n      padding: theme.spacing(1)\n    }\n  }));\n\nconst Seller_Sidebar=({ activeItem, children }) =>{\n    const classes=useStyle();\n    const dispatch = useDispatch();\n\n    return (\n        \n            <Grid container spacing={3}>\n                <Grid item md=\"auto\" xs={12} className={classes.root}>\n                    <ExpansionPanel>\n                    <List style={{ width: \"100%\" }}>\n                        <ListItemLink selected={activeItem === \"seller_dashboard\"} to=\"/seller_dashboard\">\n                        <ListItemIcon>\n                            <Dashboard />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Dashboard\" />\n                        </ListItemLink>\n                        \n                        <ListItemLink selected={activeItem === \"seller_product\"} to=\"/seller_product\">\n                        <ListItemIcon>\n                            <ShopingCartIcon color=\"action\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Products\" />\n                        </ListItemLink>\n\n                        <ListItemLink selected={activeItem === \"seller_orders\"} to=\"/seller_Order\">\n                        <ListItemIcon>\n                            <ShoppingCart />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Orders\" />\n                        </ListItemLink>\n\n\n                        <ListItemLink to=\"/seller-change-password\">\n                        <ListItemIcon>\n                            <ChangePasswordIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Change password\" />\n                        </ListItemLink>\n\n                        <ListItemLink to=\"/seller-logout\">\n                        <ListItemIcon>\n                            <LogoutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Logout\" />\n                        </ListItemLink>\n                    </List>\n                    </ExpansionPanel>\n                    \n                </Grid>\n                <Grid item md xs={12}>\n                    {children}\n                </Grid>\n            </Grid>\n       \n        \n    )\n}\n\nexport default Seller_Sidebar\n","import * as React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Seller_Sidebar from '../Seller_Sidebar'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchSellerOrders } from \"@actions/sellerActions/ProductActions\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: \"10px\",\n    overflowX: \"auto\"\n  },\n  header: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n}));\n\nfunction Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom style={{ marginTop: \"10px\" }}>\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction parseTitle(title) {\n  title = title + \"\";\n  return title.substr(0, title.lastIndexOf(' '));\n}\n\nexport default function Orders() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const sellerOrders = useSelector(state => state.seller.sellerOrders);\n\n  useEffect(() => {\n    dispatch(fetchSellerOrders());\n  }, [dispatch]);\n\n  return (\n    <Seller_Sidebar activeItem=\"seller_orders\">\n      <Title>Recent Orders</Title>\n      <Paper className={classes.root}>\n        <Table>\n          <TableHead>\n            <TableRow style={{ background: \"black\" }}>\n\n              <TableCell className={classes.header} align=\"center\">\n                Date\n              </TableCell>\n              <TableCell className={classes.header} align=\"center\">\n                Product Name\n              </TableCell>\n              <TableCell className={classes.header} align=\"center\">\n                Quantity\n              </TableCell>\n              <TableCell className={classes.header} align=\"center\">\n                Total Price\n              </TableCell>\n              <TableCell className={classes.header} align=\"center\">\n                Payment Mode\n              </TableCell>\n              <TableCell className={classes.header} align=\"center\">\n                Ship To\n              </TableCell>\n\n            </TableRow>\n          </TableHead>\n          <TableBody>\n\n            {sellerOrders.map(sellerOrder => (\n              <TableRow>\n                <TableCell align=\"center\">{sellerOrder.date.split(' ')[0]}</TableCell>\n                <TableCell align=\"center\">{parseTitle(sellerOrder.title)}</TableCell>\n                <TableCell align=\"center\">{sellerOrder.quantity}</TableCell>\n                <TableCell align=\"center\">â‚¹ {sellerOrder.total_price}</TableCell>\n                <TableCell align=\"center\">{sellerOrder.payment_mode}</TableCell>\n                <TableCell align=\"center\">{sellerOrder.location}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </Seller_Sidebar>\n  );\n}\n","import axios from \"axios\";\n\nimport {\n    FETCH_SELLER_PRODUCTS,\n    FETCH_SELLER_ORDERS,\n    CREATE_SELLER_PRODUCT,\n    DELETE_SELLER_PRODUCT,\n    UPDATE_SELLER_PRODUCT,\n    START_LOADING_UI,\n    STOP_LOADING_UI,\n    START_LOADING_BUTTON,\n    STOP_LOADING_BUTTON\n} from \"../../types\";\nimport { addNotif } from \"../notifActions\";\n\nexport const fetchSellerProducts = () => dispatch => {\n    dispatch({ type: START_LOADING_UI });\n    axios.get(\"/api/products/seller/backproduct/\").then(response => {\n        dispatch({ type: FETCH_SELLER_PRODUCTS, payload: response.data });\n        dispatch({ type: STOP_LOADING_UI });\n    });\n};\n\nexport const fetchSellerOrders = () => dispatch => {\n    dispatch({ type: START_LOADING_UI });\n    axios.get(\"/api/orders/orderfilter/seller/\").then(response => {\n        dispatch({ type: FETCH_SELLER_ORDERS, payload: response.data });\n        dispatch({ type: STOP_LOADING_UI });\n    });\n};\n\nexport const createSellerProduct = (newSellerProduct, setAddOpen) => dispatch => {\n    dispatch({ type: START_LOADING_BUTTON });\n    axios\n        .post(\"/api/products/seller/add/\", newSellerProduct, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        })\n        .then(response => {\n            dispatch({ type: CREATE_SELLER_PRODUCT, payload: response.data });\n            dispatch(addNotif({ message: \"Product has been added\" }));\n            dispatch({ type: STOP_LOADING_BUTTON });\n            setAddOpen(false);\n        })\n        .catch(error => {\n            // console.log(error, newSellerProduct);\n            dispatch({ type: STOP_LOADING_BUTTON });\n        });\n};\n\nexport const deleteSellerProduct = (id) => dispatch => {\n    dispatch({ type: START_LOADING_BUTTON });\n    axios.get(`/api/products/del/${id}/`).then(() => {\n        dispatch({ type: DELETE_SELLER_PRODUCT, payload: id });\n        dispatch({ type: STOP_LOADING_BUTTON });\n        dispatch(\n            addNotif({\n                message: \"Product has been deleted\",\n                options: { variant: \"error\" }\n            })\n        );\n    });\n};\n\nexport const updateSellerProduct = (\n    updatedSellerProduct,\n    id\n) => dispatch => {\n    dispatch({ type: START_LOADING_BUTTON });\n    axios\n        .post(`/api/products/upd/${id}/`, updatedSellerProduct)\n        .then(response => {\n            dispatch({ type: UPDATE_SELLER_PRODUCT, id, payload: response.data });\n            dispatch({ type: STOP_LOADING_BUTTON });\n            dispatch(\n                addNotif({\n                    message: \"Product has been updated\",\n                    options: { variant: \"info\" }\n                })\n            );\n        })\n        .catch(error => {\n            // console.log(error);\n            dispatch({ type: STOP_LOADING_BUTTON });\n        });\n};"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAAA;AACA;AAQA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAIA;AAAA;AAIA;AAAA;AAIA;AAAA;AAGA;AAAA;AAIA;AAAA;AAMA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAAA;AACA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAQA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAPA;AAeA;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAWA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AADA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAlBA;AAoBA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAZA;AAcA;AAAA;AAIA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AArBA;;;;A","sourceRoot":""}